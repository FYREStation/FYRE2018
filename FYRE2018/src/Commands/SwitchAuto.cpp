// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "SwitchAuto.h"
#include "WindServo.h"
#include "DriveRobot.h"
#include "UnwindServo.h"
#include "DriveRobot.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

SwitchAuto::SwitchAuto()
{

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    // Add Commands here:
    // e.g. AddSequential(new Command1());
    //      AddSequential(new Command2());
    // these will run in order.

    // To run multiple commands at the same time,
    // use AddParallel()
    // e.g. AddParallel(new Command1());
    //      AddSequential(new Command2());
    // Command1 and Command2 will run in parallel.

    // A command group will require all of the subsystems that each member
    // would require.
    // e.g. if Command1 requires chassis, and Command2 requires arm,
    // a CommandGroup containing them would require both the chassis and the
    // arm.
	Requires(Robot::driveTrain.get());
	Requires(Robot::cubeHolder.get());

	AddSequential(new WindServo());

	std::string message;
	message = frc::DriverStation::GetInstance().GetGameSpecificMessage();
	if ( message.length() > 0 )
	{
		if ( message[0] == 'L' )
		{
			// Navigate to left plate on switch
		}
		else
		{
			// Navigate to right plate on switch
		}
	}

    AddSequential(new UnwindServo());
    AddSequential(new AutonomousCommand()); // Drive the robot forward, using other auto atm as it is purely time based
    // Ideally would go a set distance based on sensor feedback

}
