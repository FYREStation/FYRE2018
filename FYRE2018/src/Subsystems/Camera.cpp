// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Camera.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Camera::Camera() : frc::Subsystem("Camera") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    deleteMe = RobotMap::cameraDeleteMe;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    frontCamera = CameraServer::GetInstance()->StartAutomaticCapture(0);
    backCamera= CameraServer::GetInstance()->StartAutomaticCapture(1);
    server = CameraServer::GetInstance()->GetServer();
    frontSink = new cs::CvSink("frontCamCv");
    backSink = new cs::CvSink("backCamCv");
    frontSink->SetSource(frontCamera);
    backSink->SetSource(backCamera);
    frontSink->SetEnabled(true);
    backSink->SetEnabled(true);
    server.SetSource(frontCamera);
}

void Camera::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Camera::Periodic() {
    // Put code here to be run every loop

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Camera::changeToFrontCamera()
{
	server.SetSource(frontCamera);
}

void Camera::changeToBackCamera()
{
	server.SetSource(backCamera);
}
